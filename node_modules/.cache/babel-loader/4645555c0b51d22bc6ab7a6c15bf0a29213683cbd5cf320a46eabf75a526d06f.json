{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Belchi\\\\Desktop\\\\david coursework\\\\src\\\\TaskDashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDashboard({\n  user\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  async function fetchTasks() {\n    const {\n      data,\n      error\n    } = await supabase.from('tasks').select('*').eq('user_id', user.id).order('created_at', {\n      ascending: false\n    });\n    if (error) console.error(error);else setTasks(data);\n  }\n  async function addTask() {\n    if (!newTask) return;\n    const {\n      error\n    } = await supabase.from('tasks').insert([{\n      user_id: user.id,\n      content: newTask,\n      is_done: false\n    }]);\n    if (error) console.error(error);else {\n      setNewTask('');\n      fetchTasks();\n    }\n  }\n  async function toggleTaskDone(id, currentStatus) {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      is_done: !currentStatus\n    }).eq('id', id);\n    if (error) console.error(error);else fetchTasks();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"\\uD83E\\uDDE0 Your Routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task...\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        className: \"flex-1 border p-2 rounded-l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        className: \"bg-purple-600 text-white px-4 rounded-r\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `p-2 mb-2 rounded flex justify-between items-center ${task.is_done ? 'bg-green-200' : 'bg-white'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.is_done ? 'line-through' : '',\n          children: task.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleTaskDone(task.id, task.is_done),\n          className: \"text-xs text-purple-700 underline\",\n          children: task.is_done ? 'Undo' : 'Done'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDashboard, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["useEffect","useState","supabase","jsxDEV","_jsxDEV","TaskDashboard","user","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","data","error","from","select","eq","id","order","ascending","console","addTask","insert","user_id","content","is_done","toggleTaskDone","currentStatus","update","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Belchi/Desktop/david coursework/src/TaskDashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { supabase } from './supabaseClient'\r\n\r\nexport default function TaskDashboard({ user }) {\r\n  const [tasks, setTasks] = useState([])\r\n  const [newTask, setNewTask] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetchTasks()\r\n  }, [])\r\n\r\n  async function fetchTasks() {\r\n    const { data, error } = await supabase\r\n      .from('tasks')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .order('created_at', { ascending: false })\r\n\r\n    if (error) console.error(error)\r\n    else setTasks(data)\r\n  }\r\n\r\n  async function addTask() {\r\n    if (!newTask) return\r\n    const { error } = await supabase.from('tasks').insert([\r\n      {\r\n        user_id: user.id,\r\n        content: newTask,\r\n        is_done: false,\r\n      },\r\n    ])\r\n    if (error) console.error(error)\r\n    else {\r\n      setNewTask('')\r\n      fetchTasks()\r\n    }\r\n  }\r\n\r\n  async function toggleTaskDone(id, currentStatus) {\r\n    const { error } = await supabase\r\n      .from('tasks')\r\n      .update({ is_done: !currentStatus })\r\n      .eq('id', id)\r\n    if (error) console.error(error)\r\n    else fetchTasks()\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">ðŸ§  Your Routine</h2>\r\n\r\n      <div className=\"flex mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task...\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          className=\"flex-1 border p-2 rounded-l\"\r\n        />\r\n        <button\r\n          onClick={addTask}\r\n          className=\"bg-purple-600 text-white px-4 rounded-r\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li\r\n            key={task.id}\r\n            className={`p-2 mb-2 rounded flex justify-between items-center ${\r\n              task.is_done ? 'bg-green-200' : 'bg-white'\r\n            }`}\r\n          >\r\n            <span className={task.is_done ? 'line-through' : ''}>\r\n              {task.content}\r\n            </span>\r\n            <button\r\n              onClick={() => toggleTaskDone(task.id, task.is_done)}\r\n              className=\"text-xs text-purple-700 underline\"\r\n            >\r\n              {task.is_done ? 'Undo' : 'Done'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}