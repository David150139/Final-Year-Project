{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Belchi\\\\Documents\\\\GitHub\\\\Final-Year-Project\\\\src\\\\AffirmationBanner.js\",\n  _s = $RefreshSig$();\n// File: AffirmationBanner.js\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst affirmations = [\"You're doing great ðŸ’œ\", \"Small steps count ðŸ‘£\", \"You're not behind â€” you're on your own timeline âœ¨\", \"Focus on progress, not perfection ðŸŒ±\", \"One task at a time. Youâ€™ve got this ðŸ’ª\"];\nexport default function AffirmationBanner() {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const index = Math.floor(Math.random() * affirmations.length);\n    setMessage(affirmations[index]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-100 border border-purple-300 text-purple-800 text-sm text-center py-2 px-4 rounded mb-6\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(AffirmationBanner, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = AffirmationBanner;\nvar _c;\n$RefreshReg$(_c, \"AffirmationBanner\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","affirmations","AffirmationBanner","_s","message","setMessage","index","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Belchi/Documents/GitHub/Final-Year-Project/src/AffirmationBanner.js"],"sourcesContent":["// File: AffirmationBanner.js\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst affirmations = [\r\n  \"You're doing great ðŸ’œ\",\r\n  \"Small steps count ðŸ‘£\",\r\n  \"You're not behind â€” you're on your own timeline âœ¨\",\r\n  \"Focus on progress, not perfection ðŸŒ±\",\r\n  \"One task at a time. Youâ€™ve got this ðŸ’ª\"\r\n]\r\n\r\nexport default function AffirmationBanner() {\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    const index = Math.floor(Math.random() * affirmations.length)\r\n    setMessage(affirmations[index])\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"bg-purple-100 border border-purple-300 text-purple-800 text-sm text-center py-2 px-4 rounded mb-6\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAG,CACnB,uBAAuB,EACvB,sBAAsB,EACtB,mDAAmD,EACnD,sCAAsC,EACtC,wCAAwC,CACzC;AAED,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,YAAY,CAACS,MAAM,CAAC;IAC7DL,UAAU,CAACJ,YAAY,CAACK,KAAK,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,mGAAmG;IAAAC,QAAA,EAC/GR;EAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACb,EAAA,CAbuBD,iBAAiB;AAAAe,EAAA,GAAjBf,iBAAiB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}